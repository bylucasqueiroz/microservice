version: '3.8'
services:
  localstack:
    image: localstack/localstack
    ports:
      - 4566:4566
    environment:
      - SERVICES=sqs,sns
    volumes:
      - ./startup.sh:/docker-entrypoint-initaws.d

  kafka:
   image: confluentinc/cp-kafka
   hostname: kafka
   ports:
     - "9092:9092"
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
     KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
     KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
     KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
   depends_on:
     - zoo

  zoo:
   image: zookeeper
   restart: always
   hostname: zoo
   environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000

  kafka-ui:
   image: provectuslabs/kafka-ui:latest
   container_name: kafka-ui
   restart: always
   environment:
     KAFKA_CLUSTERS_0_NAME: "kafka-cluster"
     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:19092"
     KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
   ports:
     - "8080:8080"
   depends_on:
     - kafka

  app:
    build:
      context: ./
      dockerfile: ./one/Dockerfile
    ports:
      - 3000:3000
    environment:
      PORT: 3000
      KAFKA_ENDPOINT: kafka:19092
      AWS_ENDPOINT: localstack:4566
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
    depends_on:
     - kafka
     - localstack